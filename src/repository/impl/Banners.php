<?php


namespace TD_Advertiser\src\repository\impl;


use DateTime;
use TD_Advertiser\src\object\AdsObject;
use TD_Advertiser\src\object\Banner;
use TD_Advertiser\src\repository\IBanners;
use WP_Post;

class Banners extends Repository implements IBanners
{
    function __construct()
    {
        parent::__construct(); // TODO: Change the autogenerated stub
    }

    /**
     * @param AdsObject|Banner $object
     */
    function create(AdsObject $object)
    {

    }

    function update(AdsObject $object)
    {
        // TODO: Implement update() method.
    }

    function delete($id)
    {
        // TODO: Implement delete() method.
    }

    function getAll($args = array())
    {
        $default_args =array(
            'post_type'=>$this->settings->getPostTypeName(),
            'posts_per_page'=>-1
        );
        $args = wp_parse_args($args,$default_args);

        $q = new \WP_Query($args);

        $banners = array();
        foreach ($q->posts as $p ) {
            $banners[] = $this->mapping($p);
        }

        return $banners;

    }

    function getById($id)
    {
        // TODO: Implement getById() method.
    }

    /**
     * @param WP_Post $res
     * @return Banner
     */
    protected function mapping($res)
    {
        $banners = new Banner();
        $banners->setId($res->ID);
        $banners->setBannerTitle($res->post_title);
        $banners->setCreatedAt(new DateTime($res->post_date));
        $banners->setUpdatedAt(new DateTime($res->post_modified));
        $banners->setBannerAdsType(get_post_meta($res->ID,'banner_ads_type',true));
        $banners->setBusinessName(get_post_meta($res->ID,'business_name',true));
        $banners->setBusinessEmail(get_post_meta($res->ID,'business_email',true));
        $banners->setPhone(get_post_meta($res->ID,'phone',true));
        $banners->setBannerCode(get_post_meta($res->ID,'banner_'.$banners->getBannerAdsType(),true));
        $banners->setBannerShowOn(get_post_meta($res->ID,'banner_show_on',true));
        $banners->setBannerPosition(get_post_meta($res->ID,'banner_position',true));
        $banners->setBannerLocationId(get_field('banner_'.$banners->getBannerPosition(),$res->ID));
        $banners->setBannerDatesLimits(get_field('banner_dates_limits',$res->ID));
        $banners->setBannerStartDate(get_field('banner_start_date',$res->ID));
        $banners->setBannerEndDate(get_field('banner_end_date',$res->ID));
        $banners->setBannerStatus(get_field('banner_status',$res->ID));
        $banners->setPricePerView(get_field('banner_price_per_view',$res->ID));
        $banners->setViews(get_field('banners_views',$res->ID));
        return $banners;
    }
}