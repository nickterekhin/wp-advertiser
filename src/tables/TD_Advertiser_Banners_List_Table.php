<?php


namespace TD_Advertiser\src\tables;


use TD_Advertiser\src\object\Banner;
use TD_Advertiser\src\repository\impl\Banners;

class TD_Advertiser_Banners_List_Table extends TD_Advertiser_List_Table
{

    public function __construct($args = array())
    {
        $this->db_ctx = $args['dbc'];
        $default = array(
            'screen'=>\WP_Screen::get($args['post_type'])
        );

        $args = wp_parse_args($args,$default);
        parent::__construct($args); // TODO: Change the autogenerated stub
    }

    public function get_columns()
    {
        $columns = array(

            'title' => 'Title',
            'zone' =>'Ads Zone',
            'banner_type'=>'Type',
            'show_on'=>'Show On',
            'location'=>'location',
            'price'=>'Price',
            'date_limits'=>'Date Limits',
            'status'=>'Status'
        );

        return $columns;

    }

    /**
     * @param Banner $item
     * @return string
     */
    function column_title($item)
    {
        $status = '';
        if($item->getPostStatus()=='draft')
            $status = '- <b>(draft)</b>';
        $out='<ul>';
            $out.='<li>'.$item->getBannerTitle().' '.$status.'</li>';
            $out.='<li><span>'.$item->getCreatedAt()->format('d-m-Y').'</span></li>';
        $out.='</ul>';
        return $out;
    }

    /**
     * @param Banner $item
     * @return mixed
     */
    function column_banner_type($item)
    {
        return '<span>'.$item->getBannerAdsType().'</span>';
    }

    /**
     * @param Banner $item
     * @return string
     */
    function column_zone($item)
    {
        $zones = wp_get_post_terms($item->getId(),'td_ads_zone');

        $out = '<ul>';
        $out.= '<li>'.$zones[0]->name.'</li>';
        $out.= '<li><span>'.$zones[0]->description.'</span></li>';
        $out.='</ul>';
        return $out;
    }

    /**
     * @param Banner $item
     * @return string
     */
    function column_location($item)
    {
        return '<span>'.ucfirst($item->getBannerPosition()).'</span>';
    }


    /**
     * @param Banner $item
     * @return string
     */
    function column_price($item)
    {
        $out='<ul>';
        $out.='<li><span>Views: '.$item->getViews().'</span></li>';
        $out.='<li><span>Rate per view: '.round($item->getPricePerView()/1000,2).'</span></li>';
        $out.='<li><span>Total: '.round($item->getViews()*$item->getPricePerView()/1000,2).'</span></li>';
        $out.='</ul>';

        return $out;

    }

    /**
     * @param Banner $item
     * @return string
     */
    function column_date_limits($item)
    {
        if($item->isBannerDatesLimits())
        {
            $out='<ul>';
            $out.='<li><span>'.$item->getBannerStartDate()->format('d-n-Y').'</span></li>';
            $out.='<li><span>'.$item->getBannerEndDate()->format('d-n-Y').'</span></li>';
            $out.='<ul>';

            return $out;
        }
        return '<span>unlimited</span>';
    }

    /**
     * @param Banner $item
     * @return mixed
     */
    function column_status($item)
    {
        $args=array(
            'status'=>'Disabled',
            'type'=>'default',
            'action'=>'open'
        );
        if($item->isBannerStatus())
        {
            $args['status']='Active';
            $args['type']='success';
            $args['action']='close';
        }
        $url = add_query_arg(array('page'=>$_REQUEST['page'],'a'=>'state','w'=>$args['action'],'id'=>$item->getId()),admin_url('admin.php'));
        return sprintf('<a href="%s"><span class="banner-label banner-label-%s">%s</span></a>',$url,$args['type'],$args['status']);
    }
    /**
     * @param Banner $item
     * @return array
     */
    function column_show_on($item)
    {
        $res = array_map(array($this,"show_on_mapper"),$item->getBannerShowOn()?$item->getBannerShowOn():array());
        if($res) {
            $out = '<ul>';
            foreach ($res as $r) {
                $out .= '<li><span>' . $r . '</span></li>';
            }
            $out .= '</ul>';
            return $out;
        }

        return '';
    }
    protected  function show_on_mapper($a)
    {
        return ucfirst($a)."";
    }

    protected function get_default_primary_column_name()
    {
        return 'title';
    }

    public function prepare_items()
    {

        $this->_column_headers  = $this->get_column_info();
        $this->items = $this->db_ctx->getBanners()->getAll();

    }

    protected function column_default($item, $column_name)
    {
        switch($column_name)
        {

            default:
                return $item->getId();
        }
    }

    /**
     * @param Banner $item
     * @param string $column_name
     * @param string $primary
     * @return string
     */
    protected function handle_row_actions($item, $column_name, $primary)
    {
        if($column_name!=$primary) return '';
        //http://localhost/wplab_2/wp-admin/post.php?post=16115&action=edit

        $actions = array();
        $edit = add_query_arg(array('post'=>$item->getId(),'action'=>'edit'),admin_url('post.php'));
        $del = add_query_arg(array('page'=>$_REQUEST['page'],'a'=>'del','id'=>$item->getId()),admin_url('admin.php'));
        $reset = add_query_arg(array('page'=>$_REQUEST['page'],'a'=>'reset','id'=>$item->getId()),admin_url('admin.php'));

        $actions['edit'] = sprintf('<a href="%s">%s</a>',$edit,__('Edit'));
        $actions['delete'] = sprintf('<a href="%s">%s</a>',$del,__('Delete'));
        $actions['reset'] = sprintf('<a href="%s">%s</a',$reset,__('Reset'));

        return $this->row_actions($actions);
    }

    public function add_new_button()
    {
        //http://localhost/wplab_2/wp-admin/post-new.php?post_type=td-advertiser
        $add_new = add_query_arg(array('post_type'=>$this->_args['post_type']),admin_url('post-new.php'));
        echo sprintf('<a href="%s" class="page-title-action">%s</a><hr class="wp-header-end">',$add_new,__("Add New"));
    }

    protected function custom_table_css_classes()
    {
        return "table-ads-banner-list";
    }


}